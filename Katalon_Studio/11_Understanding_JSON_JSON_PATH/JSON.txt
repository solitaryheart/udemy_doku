JSON (JavaScript Object Notation) is a lightweight data-interchange format
JSON is a syntax for storing and exchanging data
Data is placed in JSON in the format of KEY and VALUE pair
Value could be an array
Value can have further key-value (Call it object)

-----------------------------

What is the use of JSON PATH
How to write simple JSON path (jsonpath.com)
How to write complex JSON path wirh Array
How to write complex JSON path with Object


---------------------------------------------------
{
	"Name":"Delhi",
	"Age" :"23,
	"PhoneNumber" : "8743-913-121",
	"City" : ["Delhi", "Mumbai","Banglore"],
	"Address" :
		{
			"StreetName": "ABCD",
			"HouseNumber": "23D",
			"City": "ABCDEF"
			"Number":
				{
					"Landline":"213324424"
					"Mobile":"42342324"
				}
		}
		
}

--------------------------------------------------------

Simple JSON PATH

from root to next child

$.Age  		oder 		$[Age]
$.Name 		oder		$[Name]
$.City		oder		$[City]

moving to specific child element

$.Address.StreetName	oder	$[Address][StreetName]

---------------------------------------------------------

Complex JSON PATH

moving to first array element

$.City[0]	oder 		$[City][0}























----------------------------------------------------

-------------------------------
{ "store": {
    "book": [ 
      { "category": "reference",
        "author": "Nigel Rees",
        "title": "Sayings of the Century",
        "price": 8.95
      },
      { "category": "fiction",
        "author": "Evelyn Waugh",
        "title": "Sword of Honour",
        "price": 12.99
      },
      { "category": "fiction",
        "author": "Herman Melville",
        "title": "Moby Dick",
        "isbn": "0-553-21311-3",
        "price": 8.99
      },
      { "category": "fiction",
        "author": "J. R. R. Tolkien",
        "title": "The Lord of the Rings",
        "isbn": "0-395-19395-8",
        "price": 22.99
      }
    ],
    "bicycle": {
      "color": "red",
      "price": 19.95
    }
  }
}

-----------------------------------------------------------------------------------

$.store.book[*].author		the authors of all books in the store
$..author			all authors
$.store.*			all things in store, which are some books and a red bicycle.
$.store..price			he price of everything in the store.
$..book[2]			the third book
$..book				all books

$..book[(@.length-1)]
$..book[-1:]			the last book in order.

$.store..title			all titles of all books (oder $[store].[title]

$..book[0,1]
$..book[:2]			the first two books
$..book[-2:]			the last two books

$..book[?(@.isbn)]		filter all books with isbn number

$..book[?(@.price<10)]		filter all books cheapier than 10


$..*				all Elements All members of JSON structure.

$ 	-> root element
.. 	-> rekursiv, right from the root directory

------------------------

alternative Schreibweise

$.store.book[*].author
$['store]['book][*].author


--------------------------------

JSON PATH -> synatay elements

$			- root object / element
@			- current object / element
.or[]			- child operator
..			- rescursive descent
*			- wildcard. All Objects
[]			- native array operator
[,]			- alternare name od array indices as set
[start:end:step]	- arrice slice operator
?()			- applies filter (script expression
()			- script expression, using the underlying script engine











