How to setup Jenkins job
How to get project from git
How to run API tests from Jenkins
Useful Tips

*****SETUP JENKINS AND RUNNING API TESTS FROM JENKINS *******************
**************************************************************************
---------------------
java -jar jenkins.war--httpPort=xxxx (xxxx- customized port)

1.) go to google "download jenkins"
2.) download "generic java package (.war)
3.) go to location where jenkins.war is installed -> C:\jenkins 
4.) open cmd
4.) java -jar jenkins.war --httpPort=9292 -> will start jenkins server
5.) go to browser and type -> localhost:9292 -> Jenkins-URL: http://localhost:9292/
6.) jenkins dashboard is displayed
7.) install default plugins
8.) create admin-account


User: solitaryheart
PW: Git
Voller Name: Matthias Meier
Email: matthias.meier@kps.com

--------------------------------------
JENKINS DASHBOARD

1.) Click on new item
2.) enter name -> "Katalon_APITesting", create as "Freestyple project"
3.) Click on "Source-Code-Management" Tab
4.) Select "Git" in "Source-Code-Management" section
5.) Enter GIT-Remote-Repository URL -> https://github.com/solitaryheart/katalon-api-demo.git
6.) Click on Save
7.) Click on "Build now" -> to check if project will be created from github
8.) Build will be created -> can be checked in Build-History
9.) Check Console Output -> Check "finished sucessfully"
10.) important -> git project will be cloned here "C:\Users\matthias.meier\.jenkins\workspace\Katalon_APITesting"

REMEMBER -> the workplace folder is the important place for the Jenkins-JOB

11.) Custom Workspace can be created ! -> follow these steps

to do first

a) go to file-system -> create folder "JenkinsWorkplaces"
b) within "JenkinsWorkplaces" folder create new folder with project name "Katalon_API"
c) result: C:\JenkinsWorkplaces\Katalon_API
d) In Jenkins Dashboard go back to project -> click on "Configure" 
e) click on "Advanced" button -> "Use custom workplace" option is available
f) click on "Use custom workplace"
g) privide path to new workspace - 
i) if needed provide a display name: "Katalon_API"
j) click on save 

12.) Click on "Build now" again -> check if project will be created in customised jenkins-workspace
13.) Check if new workplace was created here -> C:\JenkinsWorkplaces\Katalon_API


CONFIGURE AN BUILD-TRIGGER for JENKINS

14.) In Jenkins Dashboard go back to project -> click on "Configure"
15.) Go to "Build-Trigger section an configure a build trigger

here "GitHub hook trigger for SCM polling selected"
-> new build should be created everytime changes are pushed to remote GitHub repository


CONFIGURE TESTS WHICH SHOULD BE EXECUTE WHILE CREATING A NEW BUILD

16.) In Jenkins Dashboard go back to project -> click on "Configure" 
17.) Go to "Build" section
18.) Add a "Add build step"
19.) Select "Execute Windows Batch Command" -> Command section will be created
20.) Configure the batch command

a) create a initial start command "echo Starting"
b) configure location where katalon studio is installed -> C:\Katalon_Studio\Katalon_Studio_Windows_64-6.1.3\Katalon_Studio_Windows_64-6.1.3
    - before go to root directory
    - change directory to location where katalon studio is installed
    -> cd 

c) specify katalon cmd command with the help of katalon studio 

here: 

katalon -noSplash  -runMode=console -projectPath="C:\Users\matthias.meier\Katalon Studio\API_Testing_Udemy_KatalonStudio\API_Testing_Udemy_KatalonStudio.prj" -retry=0 -testSuitePath="Test Suites/KatalonAnalytics-API" -executionProfile="default" -browserType="Web Service"

edit this to correkt jenkinsworkplace location where project is cloned:

katalon -noSplash  -runMode=console -projectPath="C:\JenkinsWorkplaces\Katalon_API\API_Testing_Udemy_KatalonStudio.prj" -retry=0 -testSuitePath="Test Suites/KatalonAnalytics-API" -executionProfile="default" -browserType="Web Service"

d) paste this command 
e) create a final end command "echo Completed"

-------------------------------------------------------------------------------
echo Starting
c:
cd C:\Katalon_Studio\Katalon_Studio_Windows_64-6.1.3\Katalon_Studio_Windows_64-6.1.3
katalon -noSplash  -runMode=console -projectPath="C:\JenkinsWorkplaces\Katalon_API\API_Testing_Udemy_KatalonStudio.prj" -retry=0 -testSuitePath="Test Suites/KatalonAnalytics-API" -executionProfile="default" -browserType="Web Service"
echo Completed
-----------------------------------------------------------------------------------

START A NEW BUILD BY SELECTING "BUILD NOW" AND CHECK IF TESTS WERE EXECUTED
--------------------------------------------------------------------------------------


*****SETUP KATALON STUDIO JENKINS PLUGIN*******************
**************************************************************************

-> downloads, deploy Katalon Studio and is able to execute tests on JENKINS SERVER !
-> not needed to add katalon cmd command in Add Build Step !!

Better Choise
---------------------------------------------------------
Step 1: Install Katalon Studio Jenkins plugin

Step 2: Add plugin in Add Build Step

Step 3: Add Post Build action - Publish JUnit reports

Step 4: Add Test Analyzer to get graphical report
----------------------------------------------------------

references

https://plugins.jenkins.io/katalon
https://wiki.jenkins.io/display/JENKINS/Katalon+Plugin
https://www.youtube.com/watch?v=-FWtDEAr1Kw
https://automationstepbystep.com/

------------------------------------------------------------
Step 1: Install Katalon Studio Jenkins plugin
------------------------------------------------------------
1.) Click on new item
2.) enter name -> "KatalonJENKINSPluginDemo", create as "Freestyple project"

----Installin th Katalon Studio Plugin on JENKINS

3.) On Jenkins Dashboard got to "Manage JENKINS"
4.) Got to "Manage Plugins"
5.) Go to "Available" section
6.) Search for "Katalon" -> Plugin "Katalon Studio -> Execute Katalon Studio in JENKINS
7.) Select and install without restart
8.) Check if Plugin was installed sucessfully
9.) Go Back to Dashboard
10.) Open Project KatalonJENKINSPluginDemo
11.) Click on Configure
12.) Go to Build section ("Add build step" should be available)
--------------------------------------------------------------------------
Step 2: Add plugin in Add Build Step
---------------------------------------------------------------------------


13.) Click on "Add Build Step"
14.) Select "Execute Katalon Studio Tests" (available cause of installed plugin)
15.) In section -> "Execute Katalon Studio Tests

Download Katalon Studio version: = 6.1.5

Command arguments:


----------------------------------------------
generated command in Katalon Studio adjusted to JENKINS workspace:

katalon -noSplash  -runMode=console -projectPath="C:\JenkinsWorkplaces\Katalon_API\API_Testing_Udemy_KatalonStudio.prj" -retry=0 -testSuitePath="Test Suites/KatalonAnalytics-API" -executionProfile="default" -browserType="Web Service"

needed options:

-projectPath="C:\JenkinsWorkplaces\Katalon_API\API_Testing_Udemy_KatalonStudio.prj" -retry=0 -testSuitePath="Test Suites/KatalonAnalytics-API" -executionProfile="default" -browserType="Web Service"

cause od JENKINS workspace exists nor project-path is needed:

-retry=0 -testSuitePath="Test Suites/KatalonAnalytics-API" -executionProfile="default" -browserType="Web Service"


version with api key - if plugins are installed

-retry=0 -testSuitePath="Test Suites/KatalonAnalytics-API" -executionProfile="default" -browserType="Web Service" -apiKey=6bf20e89-6d4e-4cac-8569-34d71686c161  




---------------------------------------------------------

16.) Click on Build Now


----------------------------------------------------------------------------
Step 3: Add Post Build action - Publish JUnit reports
----------------------------------------------------------------------------

17.) Open Project KatalonJENKINSPluginDemo
18.) Click on Configure
19.) Go to Post Build Actions ("Add Post Build step step" should be available)
20.) Select JUNIT Test-results
21.) As path configure a regular expression: 

general: /Reports/<NameOfTestSuite>/*/*.xml
here: /Reports/KatalonAnalytics-API/*/*.xml

22.) Click on Build Now -> maybe 2 times
 -> JUNIT reports are availbe

------------------------------------------------------------------
Step 4: Add Test Analyzer to get graphical report
-------------------------------------------------------------------
23.) On Jenkins Dashboard got to "Manage JENKINS"
24.) Got to "Manage Plugins"
25.) Go to "Available" section
26.) Search for "Test Results Analyser"
27.) Select and install without restart
28.) Check if Plugin was installed sucessfully

29.) If JUNITReport is configures as Post Build Step nothings else is to do -> only "Build now"






------------------------------------------------
refer to the follwing help

"-browserType="Chrome" -retry=0 -statusDelay=15 -testSuitePath="Test Suites/Regression Tests/All tests". Please leave out -runMode. If not specified, -projectPath will be set to the current workspace directory"

-------------------------------------------

Katalon_API





----------------
in case of JENKINS is not able to download plugin
-> analyse logfile where JENKINS tries to download the plugin
-> download plugin manually -file: katalon.hpi

Navigate to the Manage Jenkins > Manage Plugins page in the web UI.
Click on the Advanced tab.
Choose the .hpi file under the Upload Plugin section.
Upload the plugin file.
----------------------



